.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXstage_lab.nxdl.xml

.. index::
    ! NXstage_lab (base class)
    ! stage_lab (base class)
    see: stage_lab (base class); NXstage_lab

.. _NXstage_lab:

===========
NXstage_lab
===========

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  Device which holds, aligns, orients, stimulates a specimen.

  Modern stages are multi-functional devices. Many of which offer a controlled environment
  around (a part) of the specimen and enable experimentalists to apply stimuli. Having an
  own candidate class is justified as contemporary specimen/sample stages are such multi-
  purpose/-functional tools with multiple actuators, sensors, components. With such stages
  comes the need for storing various (meta)data that are generated with manipulating the
  sample. Modern stages realize a hierarchy of components. For example the specimen might be
  mounted on a multi-axial tilt rotation holder. This holder is fixed in the support unit
  which connects the holder to the rest of the microscope. In other examples, taken from
  atom probe microscopy for instance, researchers may work with wire samples which are
  clipped into a larger fixing unit for convenience and more careful specimen handling. This
  fixture unit is known in atom probe jargon as a stub. Stubs in turn are positioned onto
  pucks. Pucks are then loaded onto carousels. carousel is a carrier unit with which
  eventually entire sets of specimens can be moved in between parts of the microscope. The
  NXstage_lab class here reflects two layers of this hierarchy. The stage is the root of the
  hierarchy. A stage carries the holder. In the case that it is not practical to distinguish
  these two layers, the holder should be given preference. Applied to examples, a
  nanoparticle is attached on a copper grid. The copper grid is the holder. The grid itself
  is fixed to the stage. An atom probe specimen is fixed in a stub. In this case the stub
  can be considered as the holder, while the cryostat temperature control unit reads more as
  the stage. A microtip on a microtip array is an example of a three-layer hierarchy
  commonly employed for efficient sequential processing of atom probe experiments. For a
  single experiment though only one microtip of the array at a time can be measured.
  Therefore, the microtip is the specimen, the array the holder and the remaining mounting
  unit that is attached to the cryo-controller the stage. To cover for an as flexible design
  of these complex lab-like modern stages, users should nest multiple instances of
  NXstage_lab objects according to their needs to reflect the differences between what they
  consider as the holder and what the stage. Similar complex situations are common in
  advanced electron microscopy. Samples are placed on chips with read-out electronics which
  act as actuators. The chips are again placed in a larger unit. Other examples are (quasi)
  in-situ experiments where experimentalists anneal or deform the specimen via e.g. in-situ
  tensile testing machines which are mounted on the specimen holder.

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXpositioner`, :ref:`NXtransformations`

.. index:: NXtransformations (base class); used in base class, NXpositioner (base class); used in base class

**Structure**:

  .. _/NXstage_lab/design-field:

  .. index:: design (field)

  **design**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    Principal design of the stage.

    Any of these values:

      * ``side entry``

      * ``top entry``

      * ``single tilt``

      * ``quick change``

      * ``multiple specimen``

      * ``bulk specimen``

      * ``double tilt``

      * ``tilt rotate``

      * ``heating chip``

      * ``atmosphere chip``

      * ``electrical-biasing chip``

      * ``liquid-cell chip``


  .. _/NXstage_lab/name-field:

  .. index:: name (field)

  **name**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    Given name.

  .. _/NXstage_lab/model-field:

  .. index:: model (field)

  **model**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    Given brand or model name by the manufacturer.

  .. _/NXstage_lab/serial_number-field:

  .. index:: serial_number (field)

  **serial_number**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    Given hardware name/serial number or hash identifier issued by the
    manufacturer.

  .. _/NXstage_lab/manufacturer_name-field:

  .. index:: manufacturer_name (field)

  **manufacturer_name**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    Given name of the manufacturer.

  .. _/NXstage_lab/description-field:

  .. index:: description (field)

  **description**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    Ideally a link to a (globally persistent) unique identifier which
    documents or can be used to infer further details of the component. If
    such a resource is not available, use this field for a free-text
    description and describe further details to the stage.

  .. _/NXstage_lab/TRANSFORMATIONS-group:

  **TRANSFORMATIONS**: (optional) :ref:`NXtransformations`

    Set of transformations which describe how the stage-affixed coordinate
    system is defined and how it has to be transformed so that it aligns
    with the specimen coordinate system.

  .. _/NXstage_lab/POSITIONER-group:

  **POSITIONER**: (optional) :ref:`NXpositioner`



Hypertext Anchors
-----------------

Table of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


================================================================================== ==================================================================================
documentation (reST source) anchor                                                 web page (HTML) anchor                                                            
================================================================================== ==================================================================================
:ref:`/NXstage_lab/description-field </NXstage_lab/description-field>`             :ref:`#nxstage-lab-description-field </NXstage_lab/description-field>`            
:ref:`/NXstage_lab/design-field </NXstage_lab/design-field>`                       :ref:`#nxstage-lab-design-field </NXstage_lab/design-field>`                      
:ref:`/NXstage_lab/manufacturer_name-field </NXstage_lab/manufacturer_name-field>` :ref:`#nxstage-lab-manufacturer-name-field </NXstage_lab/manufacturer_name-field>`
:ref:`/NXstage_lab/model-field </NXstage_lab/model-field>`                         :ref:`#nxstage-lab-model-field </NXstage_lab/model-field>`                        
:ref:`/NXstage_lab/name-field </NXstage_lab/name-field>`                           :ref:`#nxstage-lab-name-field </NXstage_lab/name-field>`                          
:ref:`/NXstage_lab/POSITIONER-group </NXstage_lab/POSITIONER-group>`               :ref:`#nxstage-lab-positioner-group </NXstage_lab/POSITIONER-group>`              
:ref:`/NXstage_lab/serial_number-field </NXstage_lab/serial_number-field>`         :ref:`#nxstage-lab-serial-number-field </NXstage_lab/serial_number-field>`        
:ref:`/NXstage_lab/TRANSFORMATIONS-group </NXstage_lab/TRANSFORMATIONS-group>`     :ref:`#nxstage-lab-transformations-group </NXstage_lab/TRANSFORMATIONS-group>`    
================================================================================== ==================================================================================


**NXDL Source**:
  https://github.com/FAIRmat-Experimental/nexus_definitions/tree/fairmat/base_classes/NXstage_lab.nxdl.xml
